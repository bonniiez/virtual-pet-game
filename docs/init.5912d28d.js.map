{"version":3,"sources":["constants.js","ui.js","gameState.js","button.js","init.js"],"names":["ICONS","TICK_RATE","SCENES","RAIN_CHANCE","DAY_LENGTH","NIGHT_LENGTH","getNextHungerTime","clock","Math","floor","random","getNextDieTime","getNextPoopTime","modFox","state","document","querySelector","className","modScene","togglePoopBag","show","classList","toggle","writeModal","text","innerHTML","setAttribute","printTimer","timer","gameState","current","startTimerCount","wakeTime","sleepTime","hungryTime","dieTime","poopTime","timeToStartCelebrating","timeToEndCelebrating","scene","tick","wake","sleep","getHungry","startCelebrating","endCelebrating","poop","die","startGame","determineFoxState","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","length","clearTimes","bind","toggleHighlighted","initButtons","selectedIcon","addEventListener","buttonClick","target","contains","init","console","log","nextTimeToTick","Date","now","nextAnimationFrame","requestAnimationFrame"],"mappings":"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","file":"init.5912d28d.js","sourceRoot":"../src","sourcesContent":["export const ICONS = [\"fish\", \"poop\", \"weather\"];\nexport const TICK_RATE = 30000;\nexport const SCENES = [\"day\", \"rain\"];\nexport const RAIN_CHANCE = 0.2;\nexport const DAY_LENGTH = 2500;\nexport const NIGHT_LENGTH = 1000;\nexport const getNextHungerTime = (clock) =>\n  Math.floor(Math.random() * 3) + 700 + clock;\nexport const getNextDieTime = (clock) =>\n  Math.floor(Math.random() * 3) + 1000 + clock;\nexport const getNextPoopTime = (clock) =>\n  Math.floor(Math.random() * 3) + 700 + clock;\n","export const modFox = function modFox(state) {\n  document.querySelector(\".fox\").className = `fox fox-${state}`;\n};\nexport const modScene = function modScene(state) {\n  document.querySelector(\".game\").className = `game ${state}`;\n};\nexport const togglePoopBag = function togglePoopBag(show) {\n  document.querySelector(\".poop-bag\").classList.toggle(\"hidden\", !show);\n};\n\nexport const writeModal = function writeModal(text = \"\") {\n  document.querySelector(\n    \".modal\"\n  ).innerHTML = `<div class=\"modal-inner\">${text}</div>`;\n\n  if (text == \"\") {\n    document.querySelector(\".modal\").setAttribute(\"style\", \"padding: 0\");\n  } else {\n    if (text != \"\") {\n      document.querySelector(\".modal\").setAttribute(\"style\", \"padding: 20px\");\n    }\n  }\n};\n\nexport const printTimer = function printTimer(timer) {\n  document.querySelector(\n    \".timer\"\n  ).innerHTML = `<div class=\"timer-inner\"> Time fox is kept alive: ${timer} seconds</div>`;\n};\n","import {\n  SCENES,\n  RAIN_CHANCE,\n  DAY_LENGTH,\n  NIGHT_LENGTH,\n  getNextDieTime,\n  getNextHungerTime,\n  getNextPoopTime,\n} from \"./constants\";\nimport { modFox, modScene, togglePoopBag, writeModal, printTimer } from \"./ui\";\n\nconst gameState = {\n  current: \"INIT\",\n  timer: 0,\n  startTimerCount: \"\",\n  clock: 1,\n  wakeTime: -1,\n  sleepTime: -1,\n  hungryTime: -1,\n  dieTime: -1,\n  poopTime: -1,\n  timeToStartCelebrating: -1,\n  timeToEndCelebrating: -1,\n  scene: 0,\n  tick() {\n    this.clock++;\n\n    if (this.startTimerCount === \"START_TIMER\") {\n      this.timer++;\n      printTimer(Math.floor(this.timer / 60));\n    }\n    // console.log(\"clock: \", this.clock, \" dietime: \", this.dieTime);\n    if (this.clock === this.wakeTime) {\n      this.wake();\n    } else if (this.clock === this.sleepTime) {\n      this.sleep();\n    } else if (this.clock === this.hungryTime) {\n      this.getHungry();\n    } else if (this.clock === this.timeToStartCelebrating) {\n      this.startCelebrating();\n    } else if (this.clock === this.timeToEndCelebrating) {\n      this.endCelebrating();\n    } else if (this.clock === this.poopTime) {\n      this.poop();\n    } else if (this.clock === this.dieTime) {\n      this.die();\n    }\n\n    return this.clock;\n  },\n\n  startGame() {\n    this.current = \"HATCHING\";\n    this.wakeTime = this.clock + 300;\n    modFox(\"egg\");\n    modScene(\"day\");\n    writeModal();\n  },\n\n  wake() {\n    this.current = \"IDLING\";\n    this.wakeTime = -1;\n    modFox(\"idling\");\n    this.scene = Math.random() > RAIN_CHANCE ? 0 : 1;\n    modScene(SCENES[this.scene]);\n    this.determineFoxState();\n\n    this.sleepTime = this.clock + DAY_LENGTH;\n    this.hungryTime = getNextHungerTime(this.clock);\n  },\n\n  // last function in gameState\n  handleUserAction(icon) {\n    if (\n      [\"FEEDING\", \"SLEEP\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\n    ) {\n      return;\n    }\n\n    if (this.current === \"INIT\" || this.current === \"DEAD\") {\n      this.startTimerCount = \"START_TIMER\";\n      this.startGame();\n      return;\n    }\n\n    // execute the currently selected action\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"fish\":\n        this.feed();\n        break;\n    }\n  },\n\n  changeWeather() {\n    this.scene = (1 + this.scene) % SCENES.length;\n    modScene(SCENES[this.scene]);\n    this.determineFoxState();\n  },\n  cleanUpPoop() {\n    if (this.current === \"POOPING\") {\n      this.dieTime = -1;\n      togglePoopBag(true);\n      this.startCelebrating();\n      this.hungryTime = getNextHungerTime(this.clock);\n      writeModal();\n    }\n  },\n\n  poop() {\n    this.current = \"POOPING\";\n    this.poopTime = -1;\n    this.dieTime = getNextDieTime(this.clock);\n    modFox(\"pooping\");\n    writeModal(\"Oh no! The fox pooped. Help clean it!\");\n  },\n\n  feed() {\n    if (this.current !== \"HUNGRY\") {\n      return;\n    }\n\n    this.current = \"FEEDING\";\n    this.dieTime = -1;\n    this.poopTime = getNextPoopTime(this.clock);\n    modFox(\"eating\");\n    this.timeToStartCelebrating = this.clock + 200;\n    writeModal(\"\");\n  },\n\n  startCelebrating() {\n    this.current = \"CELEBRATING\";\n    modFox(\"celebrate\");\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = this.clock + 200;\n  },\n  endCelebrating() {\n    this.timeToEndCelebrating = -1;\n    this.current = \"IDLING\";\n    this.determineFoxState();\n    togglePoopBag(false);\n  },\n  determineFoxState() {\n    if (this.current === \"IDLING\") {\n      if (SCENES[this.scene] === \"rain\") {\n        modFox(\"rain\");\n      } else {\n        modFox(\"idling\");\n      }\n    }\n  },\n  sleep() {\n    this.state = \"SLEEP\";\n    modFox(\"sleep\");\n    modScene(\"night\");\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n\n    this.clearTimes();\n    writeModal(\"\");\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n  },\n\n  clearTimes() {\n    this.wakeTime = -1;\n    this.sleepTime = -1;\n    this.hungryTime = -1;\n    this.dieTime = -1;\n    this.poopTime = -1;\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = -1;\n  },\n\n  getHungry() {\n    this.current = \"HUNGRY\";\n    this.dieTime = getNextDieTime(this.clock);\n    this.hungryTime = -1;\n    modFox(\"hungry\");\n    writeModal(\"oh! The fox is hungry.. maybe you should feed him.\");\n  },\n  die() {\n    this.current = \"DEAD\";\n    modScene(\"dead\");\n    modFox(\"dead\");\n    this.clearTimes();\n    writeModal(\"The fox died :( <br/> Press the middle button to start\");\n    this.startTimerCount = \"\";\n    this.timer = 0;\n  },\n};\n\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\nexport default gameState;\n","import { ICONS } from \"./constants\";\n\nconst toggleHighlighted = (icon, show) =>\n  document\n    .querySelector(`.${ICONS[icon]}-icon`)\n    .classList.toggle(\"highlighted\", show);\n\nexport default function initButtons(handleUserAction) {\n  let selectedIcon = 0;\n  function buttonClick({ target }) {\n    if (target.classList.contains(\"left-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (2 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else if (target.classList.contains(\"right-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (1 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else {\n      handleUserAction(ICONS[selectedIcon]);\n    }\n  }\n\n  document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n","import game, { handleUserAction } from \"./gameState\";\nimport { TICK_RATE } from \"./constants\";\nimport initButtons from \"./button\";\n\nasync function init() {\n  console.log(\"starting game\");\n  initButtons(handleUserAction);\n\n  let nextTimeToTick = Date.now();\n\n  function nextAnimationFrame() {\n    const now = Date.now();\n    if (nextTimeToTick <= now) {\n      game.tick();\n      nextTimeToTick <= now + TICK_RATE;\n    }\n    requestAnimationFrame(nextAnimationFrame);\n  }\n  nextAnimationFrame();\n}\n\ninit();\n"]}